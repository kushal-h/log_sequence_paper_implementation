EventId,EventTemplate,Occurrences
24ef9a76,"printFreezingDisplayLogsopening app wtoken = AppWindowToken{<*> token = Token{<*> ActivityRecord{<*> u0 <*>/.<*> t761}}}, allDrawn = false, startingDisplayed = false, startingMoved = false, isRelaunching = false",1
bc3c2db6,Pid: <*> MediaPlayer destructor,1
a4e9f81f,"[HSM] stayAwake false uid: <*>, pid: <*>",1
504c331a,abandonAudioFocus,1
13d3f523,unregisterAudioFocusListener...,1
223b4429,Unable to start service Intent { act = <*> cmp = <*><*>.<*> } U = <*>: not found,1
6aeab041,Killing <*>: <*><*> (adj <*>): empty for 1810s,1
eadc277d,getMode...,1
ce34163a,isBluetoothScoOn...,1
219ced65,isBluetoothA2dpOn...,1
9e34a535,setWiredDeviceConnectionState type: <*> state: <*>,1
24b39c4c,setWiredDeviceConnectionState type: -<*> state: <*>,1
f4b5cb98,"Start dump, calling from : pid = <*>, uid = <*>",1
72c1c362,*** unregister callback for <*>@<*>,1
154bee9a,startActivity called from non-Activity context; forcing Intent.FLAG_ACTIVITY_NEW_TASK for: Intent { flg = <*> cmp = <*>/.ui.LauncherUI (has extras) },1
c5be93aa,START u0 {act = <*> flg = <*> cmp = <*>/.activity.SplashActivity (has extras)} from uid <*> on display <*>,1
a8033340,[PhoneIntfMgr] getDataEnabled: subId = <*> retVal = true,1
53341d0c,[PhoneIntfMgr] getDataEnabled: subId = <*> phoneId = <*>,1
3ad5a38d,*** unregister callback for null,1
171261c2,*** register callback for <*>@<*>,1
6ed37c98,isSimPinSecure mSimDatas is null or empty,1
263f405d,onTrackingStopped: true,1
8fd1247f,Process <*>: qzone (pid <*>) has died,1
bd3b58c3,"state.clipTopAmount: -<*>, i: <*>",1
d8cb5b06,Scheduling restart of crashed service <*><*>.<*> in 1000ms,1
a6a7c4aa,Start proc <*>: <*>: qzone<*> for service <*><*>.<*>,1
d77010ae,START u0 {flg = <*> cmp = <*>/.ui.LauncherUI (has extras)} from uid <*> on display <*>,1
c695a603,enqueueNotificationInternal: pkg = <*> id = <*> notification = Notification(pri = <*> contentView = null vibrate = [] sound = null tick defaults = <*> flags = <*> color = <*> category = msg vis = PRIVATE),1
e23c2601,handleBatteryUpdate,1
eb3415bd,ChargingSpeed Wattage: -<*> ST: <*> --> <*>,1
f360e1f9,battery changed pluggedType: <*>,1
01334395,DefaultState what = <*>,1
7465dea5,ApStaDisabledState what = <*>,1
5185f06d,ACTION_BATTERY_CHANGED pluggedType: <*>,1
07a6efda,"onReceive, action: <*>",1
4b6c38c8,updateChargingLocked: charging = false,1
f1cf316c,ACTION_BATTERY_CHANGED AMP: <*>; Volt: <*>,1
fd9efe18,"updateIsPoweredLocked: wasPowered = false, mIsPowered = false, oldPlugType = <*>, mPlugType = <*>, mBatteryLevel = <*>",1
fdd7deac,getStreamVolume treamType: <*>,1
0c87ac07,"setDataSource(<*>, <*>, <*>)",1
d639dd08,isWiredHeadsetOn...,1
f109b8b4,getCellLocation is blocked by permission manager uid: <*> pid: <*>,1
6ff1e1fb,"START u0 {act = <*> cat = [<*>] flg = <*> cmp = <*>/.activity.SplashActivity bnds = [<*>, <*>][<*>, <*>]} from uid <*> on display <*>",1
5c10bbdf,"Application requested orientation -<*>, got rotation <*> which has compatible metrics",1
d7f9a405,"rotationForOrientationLw(orient = -<*>, last = <*>); user = <*> USER_ROTATION_LOCKED",1
248dac1b,"START u0 {act = <*> cat = [<*>] flg = <*> cmp = <*>/.NotePadActivity bnds = [<*>, <*>][<*>, <*>]} from uid <*> on display <*>",1
f07160f7,enqueueNotificationInternal: pkg = <*> id = <*> notification = Notification(pri = <*> contentView = null vibrate = [<*>] sound = null tick defaults = <*> flags = <*> color = <*> vis = PRIVATE),1
05374706,"new Process app = ProcessRecord{<*> <*>: <*>: qzone<*>}, name: <*>: qzone, euid: <*>",1
cd7563b4,onTrackingStarted,1
1628984a,makeExpandedInvisible: mExpandedVisible = false,1
6cd9718e,"acquire lock = <*>, flags = <*>, tag = ""View Lock"", name = <*>, ws = null, uid = <*>, pid = <*>",1
4bea79c0,startAnimation begin,1
d3d08bbe,Screen frozen for +1s0ms due to Window{<*> u0 <*><*>.<*>},1
748b2271,"orientation change is complete, call stopFreezingDisplayLocked",1
a281eae7,Bad activity token: <*>@<*>,1
c01e13d8,"release: lock = <*>, flg = <*>, tag = ""View Lock"", name = <*>"", ws = null, uid = <*>, pid = <*>",1
ade15b9a,schedulePeek,1
a7f6b00f,Destroying surface Surface(name = SurfaceView - <*><*>.<*>) called by <*>: <*> <*>: <*> <*>: <*> <*>$Stub.onTransact: <*> <*>: <*> <*>: <*> <bottom of call stack> <bottom of call stack>,1
d8791e4b,startAnimation end,1
c939954f,<*>: <*> cannot be cast to <*>$Token,1
4e358674,Destroying surface Surface(name = <*><*>.<*>) called by <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>$Stub.onTransact: <*> <*>: <*>,1
18e07715,removeNotification: <*> | <*> | <*> | null | <*>,2
06c4f169,onNotificationClick called,2
2710f571,"cancelNotification, cancelNotificationLocked, callingUid = <*>, callingPid = <*>",2
3b4ab179,"cancelNotificationLocked called, tell the app, reason = <*>",2
4c3873ba,cancelNotificationLocked: <*> | <*> | <*> | null | <*>,2
e329ef43,"updateLightsLocked, mInCall = false, mScreenOn = true, ledNotification = = null?false",2
88073bc0,applyOptionsLocked: Unknown animationType = <*>,2
5dfad92c,addNotification key = <*> | <*> | <*> | null | <*>,2
d0cf1812,enqueueNotificationInternal: n.getKey = <*> | <*> | <*> | null | <*>,2
d8d19c23,remove(PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}) changed bounds; rebatching,2
e6c9c8a0,"rotationForOrientationLw(orient = <*>, last = <*>); user = <*> USER_ROTATION_LOCKED",2
e9fc9238,"Application requested orientation <*>, got rotation <*> which has compatible metrics",2
a84bfe36,"sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> <*> broadcastIntent}}}, repeatInterval = <*>, listenerTag = null",2
f501a17e,setSpeakerphoneOn on: true,2
d9dee4cc,getDevicesForStream streamType: <*>,2
ed2b7e6d,"cancelNotificationLocked, remove = <*>",2
e865fe92,"animateCollapsePanels: flags = <*>, force = true, delayed = true, mExpandedVisible = true",2
7f2da837,"acquire lock = <*>, flags = <*>, tag = <*> name = android, ws = null, uid = <*>, pid = <*>",2
33c7b245,getRingtonePlayer...,2
bfb13ed2,Marking notification as seen <*> | <*> | <*> | null | <*>,2
1d75714a,RefreshBatteryInfo isBatteryLow: <*>,2
afbe067e,"flingToHeight: vel = <*>.<*>, expand = <*> target = <*>.<*>, collapseSpeedUpFactor = <*>.<*>, expandBecauseOfFalsing = false",2
96b0a991,"onTouchEvent: : <*>, x = <*>.<*>, y = <*>.<*>",2
b5721111,onExpandingFinished,2
f02115d0,onExpandingStarted,2
b85cd87a,Sending non-protected broadcast <*> from system <*>: <*><*> pkg <*>,2
f0c1dd20,"ACTIVITY check resid: <*>, size = <*>",2
36dc96c6,onNotificationExpansionChanged called,2
9042ff8a,visible is <*> gt <*>,2
4847eb65,"sending alarm Alarm{<*> type <*> when <*> PendingIntent{<*>: PendingIntentRecord{<*> android broadcastIntent}}}, repeatInterval = <*>, listenerTag = time_tick",3
215c579a,scheduleTimeTickEvent triggerAtTime = <*>,3
ae0e6d6d,visible is <*>,3
d2195381,makeExpandedInvisible: mExpandedVisible = true,3
3e03b5e1,handleTimeUpdate,3
d0941149,disable: < expand icons* alerts system_info* back home recent clock navigationbar search quick_settings >,3
b0fb9415,Received TIME_TICK alarm; rescheduling,3
597cb21f,disable: < expand ICONS* alerts SYSTEM_INFO* back home recent clock navigationbar search quick_settings >,3
edeffc74,Destroying surface Surface(name = InputMethod) called by <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>$H.handleMessage: <*> <*>: <*>,3
99718fbd,getRingerMode...,3
0a050854,getAllCellInfo is blocked by permission manager . callingPackage = <*>,3
2f983de0,registerCallback not in UI.,3
308f3bef,"cancelNotification, index: <*>",3
f2db1c93,<*>: Must execute in UI,3
d20e1a3a,"release: lock = <*>, flg = <*>, tag = <*> name = android"", ws = null, uid = <*>, pid = <*>",3
7233f052,received broadcast <*>,4
851e8e7c,shouldBlockLocation ret: true,4
7d269c33,Skipping AppWindowToken{<*> token = Token{<*> ActivityRecord{<*> u0 <*> t761}}} -- going to hide,4
26d56dab,"ActivityManagerService, attachApplication, callingPid = <*>",4
3a97dc6f,mHeadsUpExistenceChangedRunnable,4
bfad71eb,"updateLightsLocked, mInCall = false, mScreenOn = true, ledNotification = = null?true",4
b12c972f,"onInterceptTouchEvent MotionEvent { action = <*> actionButton = <*>, id[<*>] = <*>, x[<*>] = <*>.<*>, y[<*>] = <*>.<*>, toolType[<*>] = TOOL_TYPE_FINGER, buttonState = <*>, metaState = <*>, flags = <*>, edgeFlags = <*>, pointerCount = <*>, historySize = <*>, eventTime = <*>, downTime = <*>, deviceId = <*>, source = <*> }, mBlockTouches = false",4
1c5afd2e,"Taking screenshot from Surface with crop: [Rect(<*>, <*> - <*>, <*>)], width: [<*>], height: [<*>], minLayer: [<*>], maxLayer: [<*>], inRotation: [false], rot: [<*>]",4
554165dd,"ActivityRecord info: ActivityInfo{<*> <*>}, euid: <*>",4
168e62e2,mVisiblity.getValue is false,5
c22c4fc5,getNeighboringCellInfo calling app is <*>,5
32ac188c,"acquire lock = <*>, flags = <*>, tag = ""AudioMix"", name = audioserver, ws = null, uid = <*>, pid = <*>",5
fbd5de68,onNotificationVisibilityChanged called,6
eda14053,logNotificationVisibilityChanges runInThread over,6
8af8fb54,"animateCollapsePanels: flags = <*>, force = false, delayed = false, mExpandedVisible = <*>",6
7735d2c2,stopWifiDisplayScanLocked mWifiDisplayScanRequestCount = <*>,6
33e15bd0,stopWifiDisplayScanLocked record.mWifiDisplayScanRequested = false,6
f4cc530d,"cleanUpApplicationRecordLocked, reset pid: <*>, euid: <*>",6
369d5eff,cleanUpApplicationRecord -- <*>,6
dac08128,logNotificationVisibilityChanges runInThread start,6
22ff430b,"release: lock = <*>, flg = <*>, tag = ""AudioMix"", name = audioserver"", ws = null, uid = <*>, pid = <*>",6
f5639213,Destroying surface Surface(name = <*><*>.<*>) called by <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>: <*>,6
08924750,"updateLightsLocked, turn off notificationLight",6
71d4237b,"cleanUpApplicationRecordLocked, pid: <*>, restart: false",6
4232f6cf,interceptKeyTq keycode = <*> interactive = true keyguardActive = false policyFlags = <*> down false canceled false,7
3ac32281,"release: lock = <*>, flg = <*>, tag = ""RILJ_ACK_WL"", name = <*>"", ws = null, uid = <*>, pid = <*>",7
756eadfd,"Skipping, withExcluded: false, tr.intent: Intent { act = <*> dat = tel: xxxxxxxxxxx flg = <*> cmp = <*>/.ChooseSubActivity (has extras) }",7
7cb46105,interceptKeyTq keycode = <*> interactive = true keyguardActive = false policyFlags = <*> down true canceled false,7
325bc3b6,"Skipping, withExcluded: false, tr.intent: Intent { act = <*> dat = file: //<*>.apk typ = application<*>.android.package-archive flg = <*> cmp = <*>/.PackageInstallerActivity (has extras) }",7
b92a7d10,"acquire lock = <*>, flags = <*>, tag = ""*launch*"", name = android, ws = WorkSource{<*>}, uid = <*>, pid = <*>",8
ae38694d,getLastAudibleStreamVolume treamType: <*>,9
b4aa1fab,"release: lock = <*>, flg = <*>, tag = <*> name = android"", ws = WorkSource{<*>}, uid = <*>, pid = <*>",9
18084d2f,instantCollapse,9
db28c715,playSoundEffect effectType: <*>,10
8d7445f8,resumeSuspendedAutohide,10
cc327728,"acquire lock = <*>, flags = <*>, tag = ""RILJ_ACK_WL"", name = <*>, ws = null, uid = <*>, pid = <*>",10
369e3273,"state.clipTopAmount: <*>, i: <*>",12
a6b9ef39,isMusicActive...,12
e330da66,The change in focus caused us to need to do a layout <*>,12
99e75217,removeNotificationChildren,12
fbb3c9bb,closeQs,12
8a979f11,"updateClipping isOverlap: false, getTopPadding = <*>.<*>, Translation = <*>.<*>",13
32ea61de,updateDimmedActivatedHideSensitive overlap: true,13
32d60b91,"overlapAmount: <*>.<*>, previousNotificationEnd: <*>.<*>, newYTranslation: -<*>.<*>, location: <*>, i: <*>, getTopPadding: <*>.<*>, getLocationOnScreen(): -<*>",13
35515a09,"updateClipping isOverlap: true, getTopPadding = <*>.<*>, Translation = -<*>.<*>",13
df26f2cd,"updateNotificationShade: total = <*>, active = <*>",13
3b733c31,Destroying surface Surface(name = PopupWindow: <*>) called by <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>: <*> <*>: <*>,14
6665c594,"getRecentTasks: num = <*>, flags = <*>, totalTasks = <*>",14
ec75349d,getRecentTasks: topActivity = ComponentInfo{<*><*>.<*>},14
57141121,"Skipping, withExcluded: false, tr.intent: Intent { flg = <*> cmp = <*>/.recents.RecentsActivity bnds = [<*>, <*>][<*>, <*>] }",14
4f0e8a73,"interceptKeyBeforeQueueing: key <*> , result : <*>",14
0e667515,"Skipping, withExcluded: false, tr.intent: Intent { act = <*> flg = <*> cmp = <*>/.InCallActivity (has extras) }",14
3c2ee2af,cancelAutohide,15
eeec1449,querySoundEffectsEnabled...,17
168ea58d,"notifyUiVisibilityChanged: vis = <*>, SystemUiVisibility = <*>",19
3c23a570,"cancelNotificationWithTag pid <*>, uid = <*>, tag = null, pkg = <*>, id = <*>",20
3d0e505f,"cancelNotification, index: -<*>",20
522cc439,cancelPeek: false,20
fea34495,"Skipping, withExcluded: false, tr.intent: Intent { flg = <*> cmp = <*>/.<*> (has extras) }",21
482e1e93,suspendAutohide,23
bcab3745,"Releasing suspend blocker ""PowerManagerService.WakeLocks"".",33
86d02085,"Acquiring suspend blocker ""PowerManagerService.WakeLocks"".",33
27ef383d,shouldBlockLocation ret: false,33
78791997,shouldBlockLocation running ...,37
fc6b3dda,getTasks: caller <*> does not hold REAL_GET_TASKS; limiting output,37
8083b0da,"updateClipping isOverlap: false, getTopPadding = <*>.<*>, Translation = -<*>.<*>",39
b27f6b04,updateDimmedActivatedHideSensitive overlap: false,52
d8ec2b0b,"userActivityNoUpdateLocked: eventTime = <*>, event = <*>, flags = <*>, uid = <*>",69
7bf44fc6,getRunningAppProcesses: caller <*> does not hold REAL_GET_TASKS; limiting output,81
34b4e5ea,"Animating brightness: target = <*>, rate = <*>",85
956ace7c,HBM brightnessIn = <*>,85
b46f4fb2,HBM brightnessOut = <*>,85
b4f3261c,setLightsOn(true),181
6ea1b331,"ready = true, policy = <*>, wakefulness = <*>, wksummary = <*>, uasummary = <*>, bootcompleted = true, boostinprogress = false, waitmodeenable = false, mode = false, manual = <*>, auto = -<*>, adj = <*>.0userId = <*>",199
c94cebb9,"setSystemUiVisibility vis = <*> mask = <*> oldVal = <*> newVal = <*> diff = <*> fullscreenStackVis = <*> dockedStackVis = <*>, fullscreenStackBounds = Rect(<*>, <*> - <*>, <*>), dockedStackBounds = Rect(<*>, <*> - <*>, <*>)",200
